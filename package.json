{
  "name": "@fordi-org/noodly",
  "version": "0.1.0",
  "description": "A Functional State Machine (FSM) to act as a store for reactive applications.",
  "main": "src/index.mjs",
  "type": "module",
  "scripts": {
    "test": "NODE_OPTIONS=--experimental-vm-modules jest --coverage",
    "watch": "NODE_OPTIONS=--experimental-vm-modules jest --coverage --watchAll",
    "lint": "eslint ./src/**/*.mjs",
    "verify": "npm run lint && npm run test"
  },
  "repository": {
    "type": "git",
    "url": "github:Fordi/noodly"
  },
  "files": [
    "README.md",
    "src/index.js"
  ],
  "keywords": [
    "state",
    "store",
    "functional",
    "machine"
  ],
  "author": "Bryan Elliott <fordiman@gmail.com>",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/Fordi/noodly/issues"
  },
  "homepage": "https://github.com/Fordi/noodly#readme",
  "devDependencies": {
    "eslint": "^8.15.0",
    "eslint-config-airbnb": "^19.0.4",
    "eslint-plugin-import": "^2.26.0",
    "eslint-plugin-jest": "^26.1.5",
    "jest": "^28.1.0"
  },
  "eslintConfig": {
    "env": {
      "browser": true,
      "node": true
    },
    "extends": [
      "airbnb",
      "plugin:jest/recommended"
    ],
    "parserOptions": {
      "ecmaFeatures": {
        "jsx": false,
        "modules": true
      },
      "ecmaVersion": 2020
    },
    "plugins": [
      "import"
    ],
    "rules": {
      "no-param-reassign": "off",
      "no-restricted-syntax": "off",
      "import/extensions": [
        "error",
        "ignorePackages"
      ],
      "import/no-extraneous-dependencies": [
        "warn",
        {
          "devDependencies": [
            "build/*.mjs"
          ]
        }
      ],
      "no-console": [
        "error",
        {
          "allow": [
            "warn",
            "error",
            "info"
          ]
        }
      ]
    },
    "settings": {}
  },
  "jest": {
    "testMatch": [
      "./**/*.test.mjs"
    ],
    "transform": {},
    "collectCoverage": true,
    "collectCoverageFrom": [
      "./**/*.mjs"
    ],
    "coverageReporters": [
      "text-summary",
      "html"
    ],
    "coverageThreshold": {
      "global": {
        "statements": 100,
        "branches": 100,
        "functions": 100,
        "lines": 100
      }
    }
  }
}
